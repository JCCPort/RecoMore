name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Build Boost
        uses: egor-tensin/build-boost@v1.4
        with:
          version: 1.80.0
          libraries: thread serialization test
          platform: x64
          configuration: Release

      - name: Install ceres-solver
        run:
          build:
            name: ${{matrix.os}}-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.gpu}}
            runs-on: ubuntu-latest
            container: ${{matrix.os}}
            defaults:
              run:
                shell: bash -e -o pipefail {0}
            env:
              CCACHE_DIR: ${{github.workspace}}/ccache
              CMAKE_GENERATOR: Ninja
              DEBIAN_FRONTEND: noninteractive
            strategy:
              fail-fast: true
              matrix:
                os:
                  - ubuntu:20.04
                  - ubuntu:22.04
                build_type:
                  - Release
                lib:
                  - shared
                  - static
                gpu:
                  - cuda
                  - no-cuda

            steps:
              - uses: actions/checkout@v3

              - name: Setup Dependencies
                run: |
                  apt-get update
                  apt-get install -y \
                    build-essential \
                    ccache \
                    cmake \
                    libbenchmark-dev \
                    libblas-dev \
                    libeigen3-dev \
                    libgflags-dev \
                    libgoogle-glog-dev \
                    liblapack-dev \
                    libmetis-dev \
                    libsuitesparse-dev \
                    ninja-build
              - name: Setup CUDA toolkit
                if: matrix.gpu == 'cuda'
                run: |
                  apt-get install -y \
                    nvidia-cuda-dev \
                    nvidia-cuda-toolkit
              - name: Cache Build
                id: cache-build
                uses: actions/cache@v3
                with:
                  path: ${{env.CCACHE_DIR}}
                  key: ${{matrix.os}}-ccache-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.gpu}}-${{github.run_id}}
                  restore-keys: ${{matrix.os}}-ccache-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.gpu}}-

              - name: Setup Environment
                if: matrix.build_type == 'Release'
                run: |
                  echo 'CXXFLAGS=-flto' >> $GITHUB_ENV
              - name: Configure
                run: |
                  cmake -S . -B build_${{matrix.build_type}} \
                        -DBUILD_SHARED_LIBS=${{matrix.lib == 'shared'}} \
                        -DUSE_CUDA=${{matrix.gpu == 'cuda'}} \
                        -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
                        -DCMAKE_C_COMPILER_LAUNCHER=$(which ccache) \
                        -DCMAKE_CXX_COMPILER_LAUNCHER=$(which ccache) \
                        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install
              - name: Build
                run: |
                  cmake --build build_${{matrix.build_type}} \
                        --config ${{matrix.build_type}}
              - name: Test
                if: matrix.gpu == 'no-cuda'
                run: |
                  cd build_${{matrix.build_type}}/
                  ctest --config ${{matrix.build_type}} \
                        --output-on-failure \
                        -j$(nproc)
              - name: Install
                run: |
                  cmake --build build_${{matrix.build_type}}/ \
                        --config ${{matrix.build_type}} \
                        --target install   

      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."