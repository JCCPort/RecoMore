from typing import List, Tuple, Any

class PE:
    amplitude: float
    amplitudeError: float
    time: float
    timeError: float
    foundAmplitude: float
    foundTime: float
    def __init__(self, amplitude: float, amplitudeError: float, time: float, timeError: float, initialAmplitude: float, initialTime: float) -> None: ...

class ChannelFitData:
    ch: int
    redChiSq: float
    baseline: float
    pes: List[PE]
    def __init__(self, ID: int, reducedChiSq: float, baseline: float, PEs: List[PE]) -> None: ...

class EventFitData:
    eventID: int
    TDCCorrTime: str
    date: str
    SiPM: List[ChannelFitData]
    def __init__(self, ID: int, correctedTime: str, date: str, channels: List[ChannelFitData]) -> None: ...

class ChannelData:
    channel: int
    waveform: List[float]
    def __init__(self, ID: int, waveform: List[float]) -> None: ...

class EventData:
    eventID: int
    TDCCorrTime: str
    date: str
    chData: List[ChannelData]
    def __init__(self, ID: int, correctedTime: str, date: str, channels: List[ChannelData]) -> None: ...

class WCData:
    def addEvent(self, event: EventData) -> None: ...
    def getEvents(self) -> List[EventData]: ...
    def getEvent(self, eventNumber: int) -> EventData: ...
    def getEventChannel(self, eventNumber: int, channelNumber: int) -> Any: ...

class FitData:
    events: List[EventFitData]
    def addEvent(self, event: EventFitData) -> None: ...
    def setEvents(self, events: List[EventFitData]) -> None: ...
    def getEvents(self) -> List[EventFitData]: ...
    def getEvent(self, eventNumber: int) -> EventFitData: ...
    def getEventChannel(self, eventNumber: int, channelNumber: int) -> Any: ...

def ReadWCDataFileDat(filePath: str) -> WCData: ...
def ReadWCDataFileBinary(filePath: str) -> WCData: ...
def ReadWCDataFile(filePath: str) -> WCData: ...
def ReadRecoMoreTextOutput(filePath: str) -> FitData: ...
def ReadRecoMoreBinaryOutput(filePath: str) -> FitData: ...
def ReadRecoMoreOutput(filePath: str) -> FitData: ...

__version__: str
__author__: str